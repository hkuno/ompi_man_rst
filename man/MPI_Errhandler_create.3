.\" Man page generated from reStructuredText.
.
.TH "MPI_ERRHANDLER_CREATE" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Errhandler_create\fP \- Creates an MPI\-style error handler \-\- use of
this routine is deprecated.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Errhandler_create(MPI_Handler_function *function,
     MPI_Errhandler *errhandler)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
INCLUDE \(aqmpif.h\(aq
MPI_ERRHANDLER_CREATE(FUNCTION, ERRHANDLER, IERROR)
     EXTERNAL        FUNCTION
     INTEGER ERRHANDLER, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBfunction\fP: User\-defined error handling procedure.
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBerrhandler\fP: MPI error handler (handle).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
Note that use of this routine is \fIdeprecated\fP as of MPI\-2. Please use
MPI_Comm_create_errhandler instead.
.sp
Registers the user routine function for use as an MPI error handler.
Returns in errhandler a handle to the registered error handler.
.sp
In the C language, the user routine should be a C function of type
MPI_Handler_function, which is defined as
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef void (MPI_Handler_function)(MPI_Comm *, int *, ...);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The first argument is the communicator in use. The second is the error
code to be returned by the MPI routine that raised the error. If the
routine would have returned MPI_ERR_IN_STATUS, it is the error code
returned in the status for the request that caused the error handler to
be invoked. The remaining arguments are stdargs arguments whose number
and meaning is implementation\-dependent. An implementation should
clearly document these arguments. Addresses are used so that the handler
may be written in Fortran.
.SH NOTE
.sp
The MPI\-1 Standard states that an implementation may make the output
value (errhandler) simply the address of the function. However, the
action of MPI_Errhandler_ free makes this impossible, since it is
required to set the value of the argument to MPI_ERRHANDLER_NULL. In
addition, the actual error handler must remain until all communicators
that use it are freed.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Comm_create_errhandler MPI_Comm_get_errhandler
MPI_Comm_set_errhandler
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
