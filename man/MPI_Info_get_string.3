.\" Man page generated from reStructuredText.
.
.TH "MPI_INFO_GET_STRING" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Info_get_string\fP \- Retrieves the value associated with a key in
an info object.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Info_get_string(MPI_Info info, const char *key, int *buflen, char *value, int *flag)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_INFO_GET_STRING(INFO, KEY, BUFLEN, VALUE, FLAG, IERROR)
     INTEGER INFO, BUFLEN, IERROR
     CHARACTER*(*) KEY, VALUE
     LOGICAL FLAG
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Info_get_string(info, key, buflen, value, flag, ierror)
     TYPE(MPI_Info), INTENT(IN) :: info
     CHARACTER(LEN=*), INTENT(IN) :: key
     INTEGER, INTENT(INOUT) :: buflen
     CHARACTER(LEN=valuelen), INTENT(OUT) :: value
     LOGICAL, INTENT(OUT) :: flag
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBinfo\fP: Info object (handle).
.IP \(bu 2
\fBkey\fP: Key (string).
.UNINDENT
.SH OUTPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBbuflen On entry, length of value arg. On return, set to required size to\fP: hold value string (integer).
.IP \(bu 2
\fBvalue\fP: Value (string).
.IP \(bu 2
\fBflag\fP: Returns true if key defined, false if not (boolean).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%MPI_Info_get_string\fP retrieves the value associated with \fIkey\fP from
\fIinfo\fP, if any. If such a key exists in info, it sets \fIflag\fP to true and
returns the value in \fIvalue\fP, otherwise it sets flag to false and leaves
value unchanged. \fIbuflen\fP on input is the size of the provided buffer,
for the output of buflen it is the size of the buffer needed to store
the value string. If the buflen passed into the function is less than
the actual size needed to store the value string (including null
terminator in C), the value is truncated. On return, the value of
\fIbuflen\fP will be set to the required buffer size to hold the value
string. If buflen is set to 0, value is not changed. In C, \fIbuflen\fP
includes the required space for the null terminator. In C, this function
returns a null terminated string in all cases where the \fIbuflen\fP input
value is greater than 0.
.sp
If \fIkey\fP is larger than MPI_MAX_INFO_KEY, the call is erroneous.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Info_create MPI_Info_delete MPI_Info_dup MPI_Info_free
MPI_Info_get_nkeys MPI_Info_get_nthkey MPI_Info_set
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
