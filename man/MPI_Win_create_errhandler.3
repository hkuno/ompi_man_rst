.\" Man page generated from reStructuredText.
.
.TH "MPI_WIN_CREATE_ERRHANDLER" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Win_create_errhandler\fP \- Creates an error handler for a window.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Win_create_errhandler(MPI_Win_errhandler_function *function,
     MPI_Errhandler *errhandler)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_WIN_CREATE_ERRHANDLER(FUNCTION, ERRHANDLER, IERROR)
     EXTERNAL FUNCTION
     INTEGER ERRHANDLER, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Win_create_errhandler(win_errhandler_fn, errhandler, ierror)
     PROCEDURE(MPI_Win_errhandler_function) :: win_errhandler_fn
     TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DEPRECATED TYPE NAME NOTE
.sp
MPI\-2.2 deprecated the MPI_Win_errhandler_fn and MPI::Win::Errhandler_fn
types in favor of MPI_Win_errhandler_function and
MPI::Win::Errhandler_function, respectively. Open MPI supports both
names (indeed, the _fn names are typedefs to the _function names).
.SH INPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBfunction\fP: User\-defined error\-handling procedure (function).
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBerrhandler\fP: MPI error handler (handle).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%MPI_Win_create_errhandler\fP should be, in C, a function of type
MPI_Win_errhandler_function, which is defined as
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef void MPI_Win_errhandler_function(MPI Win *, int *, ...);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The first argument is the window in use, the second is the error code to
be returned.
.sp
In Fortran, the user routine should be of the form:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SUBROUTINE WIN_ERRHANDLER_FUNCTION(WIN, ERROR_CODE, ...)
    INTEGER WIN, ERROR_CODE
.ft P
.fi
.UNINDENT
.UNINDENT
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Win_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
