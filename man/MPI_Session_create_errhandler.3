.\" Man page generated from reStructuredText.
.
.TH "MPI_SESSION_CREATE_ERRHANDLER" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Session_create_errhandler\fP \- Creates an error handler that can be
attached to sessions
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Session_create_errhandler(MPI_Session_errhandler_function *function,
    MPI_Errhandler *errhandler)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq

MPI_SESSION_CREATE_ERRHANDLER(FUNCTION, ERRHANDLER, IERROR)
    EXTERNAL    FUNCTION
    INTEGER ERRHANDLER, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08

MPI_Session_create_errhandler(session_errhandler_fn, errhandler, ierror)
    PROCEDURE(MPI_Session_errhandler_function) :: session_errhandler_fn
    TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBfunction\fP : User\-defined error handling procedure (function).
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBerrhandler\fP : MPI error handler (handle).
.IP \(bu 2
\fBIERROR\fP : Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%MPI_Session_create_errhandler\fP creates an error handler that can be
attached to sessions. This \fBfunction\fP is identical to
MPI_Errhandler_create, the use of which is deprecated. In C, the
user routine should be a \fBfunction\fP of type
MPI_Session_errhandler_function, which is defined as
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef void MPI_Session_errhandler_function(MPI_Session *, int *, ...);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The first argument is the session in use. The second is the error code
to be returned by the MPI routine that raised the error. This typedef
replaces \fBMPI_Handler_function\fP, the use of which is deprecated. In
Fortran, the user routine should be of this form:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SUBROUTINE SESSION_ERRHANDLER_FUNCTION(SESSION, ERROR_CODE, ...)
   INTEGER SESSION, ERROR_CODE
.ft P
.fi
.UNINDENT
.UNINDENT
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the \fBfunction\fP and Fortran routines in the last argument. Before
the error value is returned, the current MPI error handler is called. By
default, this error handler aborts the MPI job, except for I/O
\fBfunction\fP errors. The error handler may be changed with
MPI_Session_set_errhandler; the predefined error handler
MPI_ERRORS_RETURN may be used to cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
