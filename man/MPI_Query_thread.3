.\" Man page generated from reStructuredText.
.
.TH "MPI_QUERY_THREAD" "3" "Jan 11, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Query_thread\fP \- Returns the current level of thread support
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>
int MPI_Query_thread(int *provided)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_QUERY_THREAD(PROVIDED, IERROR)
     INTEGER PROVIDED, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Query_thread(provided, ierror)
     INTEGER, INTENT(OUT) :: provided
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBprovided\fP: C/Fortran only: Level of thread support (integer).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
This routine returns in \fIprovided\fP the current level of thread support.
If MPI was initialized by a call to MPI_Init_thread, \fIprovided\fP will
have the same value as was returned by that function.
.sp
The possible values of \fIprovided\fP are as follows:
.INDENT 0.0
.TP
.B MPI_THREAD_SINGLE
Only one thread may execute.
.TP
.B MPI_THREAD_FUNNELED
If the process is multithreaded, only the thread that called
MPI_Init[_thread] may make MPI calls.
.TP
.B MPI_THREAD_SERIALIZED
If the process is multithreaded, only one thread may make MPI library
calls at one time.
.TP
.B MPI_THREAD_MULTIPLE
If the process is multithreaded, multiple threads may call MPI at
once with no restrictions.
.UNINDENT
.SH NOTES
.sp
In Open MPI, \fIprovided\fP is always MPI_THREAD_SINGLE, unless the program
has been linked with the multithreaded library, in which case \fIprovided\fP
is MPI_THREAD_MULTIPLE.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
See the MPI man page for a full list of MPI error codes.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B MPI_Init
MPI_Init_thread
.UNINDENT
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
