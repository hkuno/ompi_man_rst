.\" Man page generated from reStructuredText.
.
.TH "MPI_UNPUBLISH_NAME" "3" "Jan 05, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
MPI_Unpublish_name \- Unpublishes a service name
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>
int MPI_Unpublish_name(const char *service_name, MPI_Info info,
     const char *port_name)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_UNPUBLISH_NAME(SERVICE_NAME, INFO, PORT_NAME, IERROR)
     CHARACTER*(*)   SERVICE_NAME, PORT_NAME
     INTEGER         INFO, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Unpublish_name(service_name, info, port_name, ierror)
     CHARACTER(LEN=*), INTENT(IN) :: service_name, port_name
     TYPE(MPI_Info), INTENT(IN) :: info
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
INPUT PARAMETERS
\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-
.INDENT 0.0
.IP \(bu 2
\fBservice_name\fP: A service name (string).
.IP \(bu 2
\fBinfo\fP: Options to the name service functions (handle).
.IP \(bu 2
\fBport_name\fP: A port name (string).
.UNINDENT
.sp
OUTPUT PARAMETER
\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-
.INDENT 0.0
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
This routine removes the pair (\fIservice_name, port_name\fP) so that
applications may no longer retrieve \fIport_name\fP by calling
MPI_Lookup_name\&. It is an error to unpublish a \fIservice_name\fP that was
not published via MPI_Publish_name\&. Both the \fIservice_name\fP and
\fIport_name\fP arguments to \fI\%MPI_Unpublish_name\fP must be identical to the
arguments to the previous call to MPI_Publish_name\&.
.sp
INFO ARGUMENTS
\-\-\-\- \-\-\-\-\-\-\-\-\-
.sp
The following keys for \fIinfo\fP are recognized:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Key                   Type      Description
\-\-\-                   \-\-\-\-      \-\-\-\-\-\-\-\-\-\-\-

ompi_global_scope     bool      If set to true, unpublish the name from
                                the global scope.  Unpublish from the local
                                scope otherwise.  See the NAME SCOPE
                                section for more details.
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fIbool\fP info keys are actually strings but are evaluated as follows: if
the string value is a number, it is converted to an integer and cast to
a boolean (meaning that zero integers are false and non\-zero values are
true). If the string value is (case\-insensitive) "yes" or "true", the
boolean is true. If the string value is (case\-insensitive) "no" or
"false", the boolean is false. All other string values are unrecognized,
and therefore false.
.sp
If no info key is provided, the function will first check to see if a
global server has been specified and is available. If so, then the
unpublish function will default to global scope first, followed by
local. Otherwise, the data will default to unpublish with local scope.
.sp
NAME SCOPE
\-\-\-\- \-\-\-\-\-
.sp
Open MPI supports two name scopes: \fIglobal\fP and \fIlocal\fP\&. Local scope
values are placed in a data store located on the mpirun of the calling
process\(aq job, while global scope values reside on a central server.
Calls to \fI\%MPI_Unpublish_name\fP must correctly specify the scope to be used
in finding the value to be removed. The function will return an error if
the specified service name is not found on the indicated location.
.sp
For a more detailed description of scoping rules, please see the
MPI_Publish_name man page.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
See the MPI man page for a full list of MPI error codes.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Publish_name    MPI_Lookup_name    MPI_Open_port
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
