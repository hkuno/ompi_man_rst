.\" Man page generated from reStructuredText.
.
.TH "MPI_FREE_MEM" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Free_mem\fP \- Frees memory that has been allocated using MPI_Alloc_mem\&.
.SH SYNTAX
.SS C Syntax
.sp
c #include <mpi.h>
.sp
int MPI_Free_mem(void *base)
.SS Fortran Syntax
.sp
fortran USE MPI ! or the older form: INCLUDE \(aqmpif.h\(aq
.sp
MPI_FREE_MEM(BASE, IERROR) BASE(*) INTEGER IERROR
.SS Fortran 2008 Syntax
.sp
fortran USE mpi_f08
.sp
MPI_Free_mem(base, ierror) TYPE(*), DIMENSION(..), INTENT(IN),
ASYNCHRONOUS :: base INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.SH INPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
base : Initial address of memory segment allocated by MPI_Alloc_mem
(choice).
.UNINDENT
.SH OUTPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
IERROR : Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%MPI_Free_mem\fP frees memory that has been allocated by MPI_Alloc_mem\&.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Alloc_mem
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
