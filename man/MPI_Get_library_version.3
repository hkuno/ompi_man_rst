.\" Man page generated from reStructuredText.
.
.TH "MPI_GET_LIBRARY_VERSION" "3" "Jan 03, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..

.sp
.ce
----

.ce 0
.sp
.sp
\fI\%MPI_Get_library_version\fP \- Returns a string of the current Open MPI
version
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Get_library_version(char *version, int *resultlen)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq

MPI_GET_LIBRARY_VERSION(VERSION, RESULTLEN, IERROR)
    CHARACTER*(*)   NAME
    INTEGER RESULTLEN, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08

MPI_Get_library_version(version, resulten, ierror)
    CHARACTER(LEN=MPI_MAX_LIBRARY_VERSION_STRING), INTENT(OUT) :: version
    INTEGER, INTENT(OUT) :: resultlen
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBversion\fP : A string containing the Open MPI version (string).
.IP \(bu 2
\fBresultlen\fP : Length (in characters) of result returned in
\fBversion\fP (integer).
.IP \(bu 2
\fBIERROR\fP : Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
This routine returns a string representing the \fBversion\fP of the MPI
library. The \fBversion\fP argument is a character string for maximum
flexibility.
.sp
The number of characters actually written is returned in the output
argument, \fBresultlen\fP\&. In C, a \(aq0\(aq character is additionally stored at
\fBversion[resultlen]\fP\&. The \fBresultlen\fP cannot be larger than
(MPI_MAX_LIBRARY_VERSION_STRING \- 1). In Fortran, \fBversion\fP is
padded on the right with blank characters. The \fBresultlen\fP cannot be
larger than MPI_MAX_LIBRARY_VERSION_STRING.
.SH NOTE
.sp
The \fBversion\fP string that is passed must be at least
MPI_MAX_LIBRARY_VERSION_STRING characters long.
.sp
\fI\%MPI_Get_library_version\fP is one of the few functions that can be
called before MPI_Init and after MPI_Finalize\&.\(ga\(ga
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler
MPI_ERRORS_RETURN may be used to cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Get_version
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
