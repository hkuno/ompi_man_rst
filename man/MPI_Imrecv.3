.\" Man page generated from reStructuredText.
.
.TH "MPI_IMRECV" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Imrecv\fP \- Non\-blocking receive for a matched message
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Imrecv(void *buf, int count, MPI_Datatype type,
     MPI_Message *message, MPI_Request *request)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_IMRECV(BUF, COUNT, DATATYPE, MESSAGE, REQUEST, IERROR)
     <type>  BUF(*)
     INTEGER COUNT, DATATYPE, MESSAGE, REQUEST, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Imrecv(buf, count, datatype, message, request, ierror)
     TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf
     INTEGER, INTENT(IN) :: count
     TYPE(MPI_Datatype), INTENT(IN) :: datatype
     TYPE(MPI_Message), INTENT(INOUT) :: message
     TYPE(MPI_Request), INTENT(OUT) :: request
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBcount\fP: Number of elements to receive (nonnegative integer).
.IP \(bu 2
\fBdatatype\fP: Datatype of each send buffer element (handle).
.IP \(bu 2
\fBmessage\fP: Message (handle).
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBbuf\fP: Initial address of receive buffer (choice).
.IP \(bu 2
\fBrequest\fP: Request (handle).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
The functions MPI_Mrecv and \fI\%MPI_Imrecv\fP receive messages that have been
previously matched by a matching probe.
.sp
The \fIrequest\fP returned from \fI\%MPI_Imrecv\fP can be used with any of the
MPI_Test and MPI_Wait variants, like any non\-blocking receive request.
.sp
If \fI\%MPI_Imrecv\fP is called with MPI_MESSAGE_NULL as the message argument, a
call to one of the MPI_Test or MPI_Wait variants will return immediately
with the \fIstatus\fP object set to \fIsource\fP = MPI_PROC_NULL, \fItag\fP =
MPI_ANY_TAG, and \fIcount\fP = 0, as if a receive from MPI_PROC_NULL was
issued.
.sp
If reception of a matched message is started with \fI\%MPI_Imrecv\fP, then it is
possible to cancel the returned request with MPI_Cancel\&. If MPI_Cancel
succeeds, the matched message must be found by a subsequent message
probe (MPI_Probe, MPI_Iprobe, MPI_Mprobe, or MPI_Improbe), received by a
subsequent receive operation or canceled by the sender.
.sp
Note, however, that is it possible for the cancellation of operations
initiated with \fI\%MPI_Imrecv\fP to fail. An example of a failing case is when
canceling the matched message receive would violate MPI message ordering
rules (e.g., if another message matching the same message signature has
matched \-\- and possible received \-\- before this \fI\%MPI_Imrecv\fP is canceled).
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Mprobe MPI_Improbe MPI_Probe MPI_Iprobe \fI\%MPI_Imrecv\fP MPI_Cancel
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
