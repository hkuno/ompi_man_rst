.\" Man page generated from reStructuredText.
.
.TH "MPI_SESSION_GET_NUM_PSETS" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Session_get_num_psets\fP \- Query runtime for number of available
process sets
.SH SYNTAX
.SS C Syntax
.sp
c #include <mpi.h>
.sp
int MPI_Session_get_num_psets(MPI_Session session, MPI_Info info, int
*npset_names)
.SS Fortran Syntax
.sp
fortran USE MPI ! or the older form: INCLUDE \(aqmpif.h\(aq
.sp
MPI_SESSION_GET_NUM_PSETS(SESSION, INFO, NPSET_NAMES, IERROR) INTEGER
SESSION, INFO, SESSION, IERROR
.SS Fortran 2008 Syntax
.sp
fortran USE mpi_f08
.sp
MPI_Session_get_num_psets(session, info, npset_names, ierror)
TYPE(MPI_Session), INTENT(IN) :: session TYPE(MPI_Info), INTENT(IN) ::
info INTEGER, INTENT(OUT) :: npset_names INTEGER, OPTIONAL, INTENT(OUT)
:: ierror
.SH INPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
session : session (handle)
.IP \(bu 2
info: info object (handle)
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
npset_names : number of available process sets (non\-negtive integer)
.IP \(bu 2
IERROR : Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%MPI_Session_get_num_psets\fP is used to query the runtime for the number of
available process sets in which the calling MPI process is a member. An
MPI implementation is allowed to increase the number of available
process sets during the execution of an MPI application when new process
sets become available. However, MPI implementations are not allowed to
change the index of a particular process set name, or to change the name
of the process set at a particular index, or to delete a process set
name once it has been added.
.SH NOTES
.sp
When a process set becomes invalid, for example, when some processes
become unreachable due to failures in the communication system,
subsequent usage of the process set name may raise an error. For
example, creating an MPI_Group from such a process set might succeed
because it is a local operation, but creating an MPI_Comm from that
group and attempting collective communication may raise an error.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument. Before the
error value is returned, the current MPI error handler is called. By
default, this error handler aborts the MPI job, except for I/O function
errors. The error handler may be changed with
MPI_Session_set_errhandler; the predefined error handler
MPI_ERRORS_RETURN may be used to cause error values to be returned. Note
that MPI does not guarantee that an MPI program can continue past an
error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Session_init
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
