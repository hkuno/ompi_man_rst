.\" Man page generated from reStructuredText.
.
.TH "MPI_COMM_GET_PARENT" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Comm_get_parent\fP \- Returns the parent intercommunicator of
current spawned process.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Comm_get_parent(MPI_Comm *parent)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_COMM_GET_PARENT(PARENT, IERROR)
     INTEGER PARENT, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Comm_get_parent(parent, ierror)
     TYPE(MPI_Comm), INTENT(OUT) :: parent
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBparent\fP: The parent communicator (handle).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
If a process was started with MPI_Comm_spawn or MPI_Comm_spawn_multiple,
\fI\%MPI_Comm_get_parent\fP returns the "parent" intercommunicator of the
current process. This parent intercommunicator is created implicitly
inside of MPI_Init and is the same intercommunicator returned by the
spawn call made in the parents.
.sp
If the process was not spawned, \fI\%MPI_Comm_get_parent\fP returns
MPI_COMM_NULL.
.sp
After the parent communicator is freed or disconnected,
\fI\%MPI_Comm_get_parent\fP returns MPI_COMM_NULL.
.SH NOTES
.sp
\fI\%MPI_Comm_get_parent\fP returns a handle to a single intercommunicator.
Calling \fI\%MPI_Comm_get_parent\fP a second time returns a handle to the same
intercommunicator. Freeing the handle with MPI_Comm_disconnect or
MPI_Comm_free will cause other references to the intercommunicator to
become invalid (dangling). Note that calling MPI_Comm_free on the parent
communicator is not useful.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
MPI_Comm_spawn MPI_Comm_spawn_multiple
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
