.\" Man page generated from reStructuredText.
.
.TH "MPI_WIN_CREATE_KEYVAL" "3" "Jan 05, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Win_create_keyval\fP \- Creates a keyval for a window.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>
int MPI_Win_create_keyval(MPI_Win_copy_attr_function *win_copy_attr_fn,
     MPI_Win_delete_attr_function *win_delete_attr_fn,
     int *win_keyval, void *extra_state)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax (see FORTRAN 77 NOTES)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_WIN_CREATE_KEYVAL(WIN_COPY_ATTR_FN, WIN_DELETE_ATTR_FN,
     WIN_KEYVAL, EXTRA_STATE, IERROR)
     EXTERNAL WIN_COPY_ATTR_FN, WIN_DELETE_ATTR_FN
     INTEGER WIN_KEYVAL, IERROR
     INTEGER(KIND=MPI_ADDRESS_KIND) EXTRA_STATE
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Win_create_keyval(win_copy_attr_fn, win_delete_attr_fn, win_keyval,
             extra_state, ierror)
     PROCEDURE(MPI_Win_copy_attr_function) :: win_copy_attr_fn
     PROCEDURE(MPI_Win_delete_attr_function) :: win_delete_attr_fn
     INTEGER, INTENT(OUT) :: win_keyval
     INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: extra_state
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
INPUT PARAMETERS
\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-
.INDENT 0.0
.IP \(bu 2
\fBwin_copy_attr_fn\fP: Copy callback function for \fIwin_keyval\fP (function).
.IP \(bu 2
\fBwin_delete_attr_fn\fP: Delete callback function for \fIwin_keyval\fP (function).
.IP \(bu 2
\fBextra_state\fP: Extra state for callback functions.
.UNINDENT
.sp
OUTPUT PARAMETERS
\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-
.INDENT 0.0
.IP \(bu 2
\fBwin_keyval\fP: Key value for future access (integer).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
The argument \fIwin_copy_attr_fn\fP may be specified as MPI_WIN_NULL_COPY_FN
or MPI_WIN_DUP_FN from either C or Fortran. MPI_WIN_NULL_COPY_FN is a
function that serves only to return \fIflag\fP = 0 and MPI_SUCCESS.
MPI_WIN_DUP_FN is a simple\-minded copy function that sets \fIflag\fP = 1,
returns the value of \fIattribute_val_in\fP in \fIattribute_val_out\fP, and
returns MPI_SUCCESS.
.sp
The argument \fIwin_delete_attr_fn\fP may be specified as
MPI_WIN_NULL_DELETE_FN from either C or Fortran. MPI_WIN_NULL_DELETE_FN
is a function that serves only to return MPI_SUCCESS.
.sp
The C callback functions are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef int MPI_Win_copy_attr_function(MPI_Win oldwin, int win_keyval,
             void *extra_state, void *attribute_val_in,
             void *attribute_val_out, int *flag);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef int MPI_Win_delete_attr_function(MPI_Win win, int win_keyval,
             void *attribute_val, void *extra_state);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The Fortran callback functions are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SUBROUTINE WIN_COPY_ATTR_FN(OLDWIN, WIN_KEYVAL, EXTRA_STATE,
     ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR)
     INTEGER OLDWIN, WIN_KEYVAL, IERROR
     INTEGER(KIND=MPI_ADDRESS_KIND) EXTRA_STATE, ATTRIBUTE_VAL_IN,
             ATTRIBUTE_VAL_OUT
     LOGICAL FLAG
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SUBROUTINE WIN_DELETE_ATTR_FN(WIN, WIN_KEYVAL, ATTRIBUTE_VAL,
     EXTRA_STATE, IERROR)
     INTEGER WIN, WIN_KEYVAL, IERROR
     INTEGER(KIND=MPI_ADDRESS_KIND) ATTRIBUTE_VAL, EXTRA_STATE
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
FORTRAN 77 NOTES
\-\-\-\-\-\-\- \-\- \-\-\-\-\-
.sp
The MPI standard prescribes portable Fortran syntax for the
\fIEXTRA_STATE\fP argument only for Fortran 90. FORTRAN 77 users may use the
non\-portable syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
INTEGER*MPI_ADDRESS_KIND EXTRA_STATE
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
where MPI_ADDRESS_KIND is a constant defined in mpif.h and gives the
length of the declared integer in bytes.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
