.\" Man page generated from reStructuredText.
.
.TH "MPI_FILE_CREATE_ERRHANDLER" "3" "Jan 11, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_File_create_errhandler\fP \- Creates an MPI\-style error handler that
can be attached to a file.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>
int MPI_File_create_errhandler(MPI_File_errhandler_function *function,
     MPI_Errhandler *errhandler)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_FILE_CREATE_ERRHANDLER(FUNCTION, ERRHANDLER, IERROR)
     EXTERNAL        FUNCTION
     INTEGER ERRHANDLER, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_File_create_errhandler(file_errhandler_fn, errhandler, ierror)
     PROCEDURE(MPI_File_errhandler_function) :: file_errhandler_fn
     TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DEPRECATED TYPE NAME NOTE
.sp
MPI\-2.2 deprecated the MPI_File_errhandler_fn and
MPI::file::Errhandler_fn types in favor of MPI_File_errhandler_function
and MPI::File::Errhandler_function, respectively. Open MPI supports both
names (indeed, the _fn names are typedefs to the _function names).
.SH INPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBfunction\fP: User\-defined error handling procedure (function).
.UNINDENT
.SH OUTPUT PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBerrhandler\fP: MPI error handler (handle).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
Registers the user routine \fIfunction\fP for use as an MPI error handler.
Returns in errhandler a handle to the registered error handler.
.sp
In the C language, the user routine \fIfunction\fP should be a C function of
type MPI_File_errhandler_function, which is defined as
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef void (MPI_File_errhandler_function)(MPI_File *, int *,
\&...);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The first argument to \fIfunction\fP is the file in use. The second is the
error code to be returned by the MPI routine that raised the error.
.sp
In the Fortran language, the user routine should be of the form:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    SUBROUTINE FILE_ERRHANDLER_FUNCTION(FILE, ERROR_CODE, ...)
        INTEGER FILE, ERROR_CODE
.ft P
.fi
.UNINDENT
.UNINDENT
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. For MPI I/O function errors, the default error handler is set to
MPI_ERRORS_RETURN. The error handler may be changed with
MPI_File_set_errhandler; the predefined error handler
MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI
does not guarantee that an MPI program can continue past an error.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
