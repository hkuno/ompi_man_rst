.\" Man page generated from reStructuredText.
.
.TH "MPI_COMM_FREE_KEYVAL" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Comm_free_keyval\fP \- Frees attribute key for communicator cache
attribute.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Comm_free_keyval(int *comm_keyval)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_COMM_FREE_KEYVAL(COMM_KEYVAL, IERROR)
     INTEGER COMM_KEYVAL, IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Comm_free_keyval(comm_keyval, ierror)
     INTEGER, INTENT(INOUT) :: comm_keyval
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
INPUT/OUTPUT PARAMETER
\-\-\-\-\-/\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
* \fBcomm_keyval\fP:
.SH OUTPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%MPI_Comm_free_keyval\fP frees an extant attribute key. This function sets
the value of \fIkeyval\fP to MPI_KEYVAL_INVALID. Note that it is not
erroneous to free an attribute key that is in use, because the actual
free does not transpire until after all references (in other
communicators on the process) to the key have been freed. These
references need to be explicitly freed by the program, either via calls
to MPI_Comm_delete_attr that free one attribute instance, or by calls to
MPI_Comm_free that free all attribute instances associated with the
freed communicator.
.sp
This call is identical to the call MPI_Keyval_free but is needed to
match the communicator\-specific creation function introduced in the
MPI\-2 standard. The use of MPI_Keyval_free is deprecated.
.SH NOTES
.sp
Key values are global (they can be used with any and all communicators).
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
