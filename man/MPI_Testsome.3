.\" Man page generated from reStructuredText.
.
.TH "MPI_TESTSOME" "3" "Jan 05, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Testsome\fP \- Tests for completion of one or more previously
initiated communications in a list.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>
int MPI_Testsome(int incount, MPI_Request array_of_requests[],
     int *outcount, int array_of_indices[],
     MPI_Status array_of_statuses[])
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_TESTSOME(INCOUNT, ARRAY_OF_REQUESTS, OUTCOUNT,
             ARRAY_OF_INDICES, ARRAY_OF_STATUSES, IERROR)
     INTEGER INCOUNT, ARRAY_OF_REQUESTS(*)
     INTEGER OUTCOUNT, ARRAY_OF_INDICES(*)
     INTEGER ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Testsome(incount, array_of_requests, outcount, array_of_indices,
             array_of_statuses, ierror)
     INTEGER, INTENT(IN) :: incount
     TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(incount)
     INTEGER, INTENT(OUT) :: outcount, array_of_indices(*)
     TYPE(MPI_Status) :: array_of_statuses(*)
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
INPUT PARAMETERS
\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-
.INDENT 0.0
.IP \(bu 2
\fBincount\fP: Length of array_of_requests (integer).
.IP \(bu 2
\fBarray_of_requests\fP: Array of requests (array of handles).
.UNINDENT
.sp
OUTPUT PARAMETERS
\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-
.INDENT 0.0
.IP \(bu 2
\fBoutcount\fP: Number of completed requests (integer).
.IP \(bu 2
\fBarray_of_indices\fP: Array of indices of operations that completed (array of integers).
.IP \(bu 2
\fBarray_of_statuses\fP: Array of status objects for operations that completed (array of status).
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
Behaves like MPI_Waitsome, except that it returns immediately.
.sp
Returns in outcount the number of requests from the list
array_of_requests that have completed. Returns in the first outcount
locations of the array array_of_indices the indices of these operations
(index within the array array_of_requests; the array is indexed from 0
in C and from 1 in Fortran). Returns in the first outcount locations of
the array array_of_status the status for these completed operations. If
a request that completed was allocated by a nonblocking communication
call, then it is deallocated, and the associated handle is set to
MPI_REQUEST_NULL.
.sp
If no operation has completed it returns outcount = 0. If there is no
active handle in the list, it returns outcount = MPI_UNDEFINED.
.sp
\fI\%MPI_Testsome\fP is a local operation, which returns immediately, whereas
MPI_Waitsome blocks until a communication completes, if it was passed a
list that contains at least one active handle. Both calls fulfill a
fairness requirement: If a request for a receive repeatedly appears in a
list of requests passed to MPI_Waitsome or \fI\%MPI_Testsome\fP, and a matching
send has been posted, then the receive will eventually succeed unless
the send is satisfied by another receive; send requests also fulfill
this fairness requirement.
.sp
Errors that occur during the execution of \fI\%MPI_Testsome\fP are handled as
for MPI_Waitsome\&.
.sp
If your application does not need to examine the \fIarray_of_statuses\fP
field, you can save resources by using the predefined constant
MPI_STATUSES_IGNORE can be used as a special value for the
\fIarray_of_statuses\fP argument.
.SH NOTES
.sp
The use of \fI\%MPI_Testsome\fP is likely to be more efficient than the use of
MPI_Testany\&. The former returns information on all completed
communications; with the latter, a new call is required for each
communication that completes.
.sp
A server with multiple clients can use MPI_Waitsome so as not to starve
any client. Clients send messages to the server with service requests.
The server calls MPI_Waitsome with one receive request for each client,
then handles all receives that have completed. If a call to MPI_Waitany
is used instead, then one client could starve while requests from
another client always sneak in first.
.SH ERRORS
.sp
For each invocation of \fI\%MPI_Testsome\fP, if one or more requests generate an
MPI error, only the \fIfirst\fP MPI request that caused an error will be
passed to its corresponding error handler. No other error handlers will
be invoked (even if multiple requests generated errors). However, \fIall\fP
requests that generate an error will have a relevant error code set in
the corresponding status.MPI_ERROR field (unless MPI_STATUSES_IGNORE was
used).
.sp
The default error handler aborts the MPI job, except for I/O function
errors. The error handler may be changed with MPI_Comm_set_errhandler,
MPI_File_set_errhandler, or MPI_Win_set_errhandler (depending on the
type of MPI handle that generated the MPI request); the predefined error
handler MPI_ERRORS_RETURN may be used to cause error values to be
returned. Note that MPI does not guarantee that an MPI program can
continue past an error.
.sp
If the invoked error handler allows \fI\%MPI_Testsome\fP to return to the
caller, the value MPI_ERR_IN_STATUS will be returned in the C and
Fortran bindings.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
.nf
MPI_Comm_set_errhandler | MPI_File_set_errhandler | MPI_Test | MPI_Testall | MPI_Testany | MPI_Wait | MPI_Waitall | MPI_Waitany | MPI_Waitsome | MPI_Win_set_errhandler
.fi
.sp
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
