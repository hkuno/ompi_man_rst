.\" Man page generated from reStructuredText.
.
.TH "MPI_WIN_C2F" "3" "Jan 05, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.INDENT 3.5
.UNINDENT
.UNINDENT
.sp
MPI_Comm_f2c, MPI_Comm_c2f, MPI_File_f2c, MPI_File_c2f, MPI_Info_f2c,
MPI_Info_c2f, MPI_Message_f2c, MPI_Message_c2f, MPI_Op_f2c, MPI_Op_c2f,
MPI_Request_f2c, MPI_Request_c2f, MPI_Type_f2c, MPI_Type_c2f,
MPI_Win_f2c, \fI\%MPI_Win_c2f\fP \- Translates a C handle into a Fortran
handle, or vice versa.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>
MPI_Comm MPI_Comm_f2c(MPI_Fint comm)
MPI_Fint MPI_Comm_c2f(MPI_Comm comm)

MPI_File MPI_File_f2c(MPI_Fint file)
MPI_Fint MPI_File_c2f(MPI_File file)

MPI_Group MPI_Group_f2c(MPI Fint group)
MPI_Fint MPI_Group_c2f(MPI Group group)

MPI_Info MPI_Info_f2c(MPI_Fint info)
MPI_Fint MPI_Info_c2f(MPI_Info info)

MPI_Message MPI_Message_f2c(MPI_Fint message)
MPI_Fint MPI_Message_c2f(MPI_Message message)

MPI_Op MPI_Op_f2c(MPI_Fint op)
MPI_Fint MPI_Op_c2f(MPI_Op op)

MPI_Request MPI_Request_f2c(MPI_Fint request)
MPI_Fint MPI_Request_c2f(MPI_Request request)

MPI_Datatype MPI_Type_f2c(MPI_Fint datatype)
MPI_Fint MPI_Type_c2f(MPI_Datatype datatype)

MPI_Win MPI_Win_f2c(MPI_Fint win)
MPI_Fint MPI_Win_c2f(MPI_Win win)
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
Handles are passed between Fortran and C by using an explicit C wrapper
to convert Fortran handles to C handles. There is no direct access to C
handles in Fortran. The type definition MPI_Fint is provided in C for
an integer of the size that matches a Fortran \fIINTEGER\fP; usually,
MPI_Fint will be equivalent to \fIint\fP\&. The handle translation functions
are provided in C to convert from a Fortran handle (which is an integer)
to a C handle, and vice versa.
.sp
For example, if \fIcomm\fP is a valid Fortran handle to a communicator, then
MPI_Comm_f2c returns a valid C handle to that same communicator; if
\fIcomm\fP = MPI_COMM_NULL (Fortran value), then MPI_Comm_f2c returns a null
C handle; if \fIcomm\fP is an invalid Fortran handle, then MPI_Comm_f2c
returns an invalid C handle.
.SH NOTE
.sp
This function does not return an error value. Consequently, the result
of calling it before MPI_Init or after MPI_Finalize is undefined.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
