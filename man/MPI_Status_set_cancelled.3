.\" Man page generated from reStructuredText.
.
.TH "MPI_STATUS_SET_CANCELLED" "3" "Feb 20, 2022" "" "Open MPI"
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fI\%MPI_Status_set_cancelled\fP \- Sets \fIstatus\fP to indicate a request has
been canceled.
.SH SYNTAX
.SS C Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <mpi.h>

int MPI_Status_set_cancelled(MPI_Status *status, int flag)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE MPI
! or the older form: INCLUDE \(aqmpif.h\(aq
MPI_STATUS_SET_CANCELLED(STATUS, FLAG, IERROR)
     INTEGER STATUS(MPI_STATUS_SIZE), IERROR
     LOGICAL FLAG
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Fortran 2008 Syntax
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
USE mpi_f08
MPI_Status_set_cancelled(status, flag, ierror)
     TYPE(MPI_Status), INTENT(INOUT) :: status
     LOGICAL, INTENT(OUT) :: flag
     INTEGER, OPTIONAL, INTENT(OUT) :: ierror
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
INPUT/OUTPUT PARAMETER
\-\-\-\-\-/\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
* \fBstatus\fP: Status with which to associate cancel flag (status).
.SH INPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBflag\fP: If true, indicates request was canceled (logical).
.UNINDENT
.SH OUTPUT PARAMETER
.INDENT 0.0
.IP \(bu 2
\fBIERROR\fP: Fortran only: Error status (integer).
.UNINDENT
.SH DESCRIPTION
.sp
If \fIflag\fP is set to true, then a subsequent call to
MPI_Test_cancelled(status, flag*) will also return \fIflag\fP = true;
otherwise it will return false.
.SH NOTES
.sp
Users are advised not to reuse the status fields for values other than
those for which they were intended. Doing so may lead to unexpected
results when using the status object. For example, calling
MPI_Get_elements may cause an error if the value is out of range, or it
may be impossible to detect such an error. The \fIextra_state\fP argument
provided with a generalized request can be used to return information
that does not logically belong in \fIstatus\fP\&. Furthermore, modifying the
values in a status set internally by MPI, such as MPI_Recv, may lead to
unpredictable results and is strongly discouraged.
.SH ERRORS
.sp
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with
MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error.
.SH COPYRIGHT
2020, The Open MPI Community
.\" Generated by docutils manpage writer.
.
